proxy_cache_path /var/cache/nginx
                    keys_zone=NginxCache:20m
                    inactive=60m
                    max_size=2g;

# param definition
# keys_zone -> Arbitrary name of the cache and and the metadata size.
# inactive -> How long the data will be stored in the cache
# max_size -> Maximum cache size, if size exceeded then cache manager will delete all the old data(least recently)

upstream website {
    server django:8000;
}

server {
    listen 80;

    # To use cache
    proxy_cache NginxCache;

    location / {
        proxy_pass http://website;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        # cache directives
        # proxy_cache_min_uses 5;  # After 5 times page visit, it will cache the page

        proxy_cache_methods GET;
        proxy_cache_valid 200 10m;
        proxy_cache_valid 404 5m;

        # ignore Vary header
        proxy_ignore_headers Vary;

        # by pass cache for logged in users
        proxy_cache_bypass $cookie_sessionid;

        add_header X-Proxy_Cache $upstream_cache_status; # this will add X-Proxy_Cache header in the response,
        add_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # if everything goes well we can see X-Proxy_Cache=HIT and X-Forwarded-For keys in the header
    }

    # To serve static files
    location /static/ {
        alias /home/app/staticfiles/;
    }

    # Skipping cache for p1
    # location /p1 {
    #    proxy_pass http://website;
    #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #    proxy_set_header Host $host;

        # cache
    #    proxy_cache_bypass $http_cache_bypass;
    #    proxy_cache off;

        # We will not see X-Proxy_Cache and X-Forwarded-For keys in the header
    # }
}